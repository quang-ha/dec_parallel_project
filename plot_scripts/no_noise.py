import numpy as np
import matplotlib.pyplot as plt

# Create figures
plt.figure(figsize=(16, 8))

# Read in data
data = np.loadtxt("coords.dat", skiprows=2)
Nx, Ny = int(data[0, 0]), int(data[0, 1])
x, y = data[1:, 0], data[1:, 1]

# Draw lines on left subplot
plt.subplot(121)
plt.triplot(x, y)
plt.scatter(x, y)
plt.axis('equal')
plt.axis('off')

# Then plot the eigenvalues
plt.subplot(122)
xcal = np.array([5.09709000e+00, 5.09709000e+00, 5.09709000e+00, 5.09709000e+00,
        5.09709000e+00,  5.09709000e+00,  4.61880000e+00,  4.61880000e+00,
        4.61880000e+00,  4.61880000e+00,  4.61880000e+00,  4.61880000e+00,
        4.61880000e+00,  4.61880000e+00,  4.61880000e+00,  4.61880000e+00,
        4.61880000e+00,  4.61880000e+00,  4.61880000e+00,  4.61880000e+00,
        4.61880000e+00,  4.61880000e+00,  4.61880000e+00,  4.61880000e+00,
        4.61880000e+00,  4.61880000e+00,  3.94239000e+00,  3.94239000e+00,
        3.94239000e+00,  3.94239000e+00,  3.94239000e+00,  3.94239000e+00,
        3.94239000e+00,  3.46410000e+00,  3.46410000e+00,  3.46410000e+00,
        3.46410000e+00,  3.46410000e+00,  3.46410000e+00,  3.46410000e+00,
        3.46410000e+00,  3.46410000e+00,  3.46410000e+00,  3.46410000e+00,
        3.46410000e+00,  2.30940000e+00,  2.30940000e+00,  2.30940000e+00,
        2.30940000e+00,  2.30940000e+00,  2.30940000e+00,  1.83111000e+00,
        1.83111000e+00,  1.83111000e+00,  1.83111000e+00,  1.83111000e+00,
        1.83111000e+00,  6.76408000e-01,  6.76408000e-01,  6.76408000e-01,
        6.76408000e-01,  6.76408000e-01,  6.76408000e-01,  2.16084000e-15])
xref = np.array([0., 1.17157, 1.17157, 1.17157, 1.17157, 1.17157, 1.17157, 3.17157,
        3.17157, 3.17157, 3.17157, 3.17157, 3.17157, 4., 4., 4., 4., 4., 4.,
        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.82843, 6.82843,
        6.82843, 6.82843, 6.82843, 6.82843, 8., 8., 8., 8., 8., 8., 8., 8.,
        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.82843, 8.82843,
        8.82843, 8.82843, 8.82843, 8.82843])

ratio = max(xref)/max(xcal)
print(ratio)
plt.scatter(np.linspace(1, len(xcal), len(xcal)), ratio*xcal[::-1],
            s=50, label="Computed")
plt.scatter(np.linspace(1, len(xcal), len(xcal)), xref, marker='^', alpha=0.5,
            s=100, label="Reference")
plt.xlabel("Eigennumber")
plt.ylabel("Eigenvalues")
plt.legend()
# Save figure
plt.savefig("grid_{}_{}_nonoise.png".format(Nx,Ny))
